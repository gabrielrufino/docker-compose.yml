version: '3.9'

services:
  appsmith:
    image: appsmith/appsmith-ce:$APPSMITH_VERSION
    ports:
      - 8085:80
    volumes:
      - appsmith:/appsmith-stacks
    labels:
      com.centurylinklabs.watchtower.enable: 'true'
    restart: $APPSMITH_RESTART_POLICY
  archlinux:
    image: archlinux:$ARCHLINUX_VERSION
    tty: true
    volumes:
      - ./volumes/archlinux/:/home/shared
    restart: $ARCHLINUX_RESTART_POLICY
  debian:
    image: debian:$DEBIAN_VERSION
    tty: true
    volumes:
      - ./volumes/debian/:/home/shared
    restart: $DEBIAN_RESTART_POLICY
  fedora:
    image: fedora:$FEDORA_VERSION
    tty: true
    volumes:
      - ./volumes/fedora/:/home/shared
    restart: $FEDORA_RESTART_POLICY
  gitea:
    image: gitea/gitea:$GITEA_VERSION
    environment:
      USER_UID: 1000
      USER_GID: 1000
    volumes:
      - gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 3002:3000
    restart: $GITEA_RESTART_POLICY
  grafana:
    image: grafana/grafana:$GRAFANA_VERSION
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    restart: $GRAFANA_RESTART_POLICY
  hoppscotch:
    image: hoppscotch/hoppscotch:$HOPPSCOTCH_VERSION
    container_name: $HOPPSCOTCH_CONTAINER_NAME
    ports:
      - 3004:3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`hoppscotch.$TRAEFIK_BASE_HOST`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.tls.certresolver=letsencrypt
    restart: $HOPPSCOTCH_RESTART_POLICY
  kali:
    image: kalilinux/kali-rolling
    tty: true
  loki:
    image: grafana/loki:$LOKI_VERSION
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    restart: $LOKI_RESTART_POLICY
  matomo:
    image: matomo:$MATOMO_VERSION
    ports:
      - 8086:80
    environment:
      MATOMO_DATABASE_HOST: $MATOMO_DATABASE_HOST
      MATOMO_DATABASE_USERNAME: $MATOMO_DATABASE_USERNAME
      MATOMO_DATABASE_PASSWORD: $MATOMO_DATABASE_PASSWORD
      MATOMO_DATABASE_DBNAME: $MATOMO_DATABASE_DBNAME
    restart: $MATOMO_RESTART_POLICY
  mautic:
    image: mautic/mautic:$MAUTIC_VERSION
    ports:
      - 8082:80
    environment:
      MAUTIC_DB_HOST: $MAUTIC_DB_HOST
      MAUTIC_DB_USER: $MAUTIC_DB_USER
      MAUTIC_DB_PASSWORD: $MAUTIC_DB_PASSWORD
      MAUTIC_DB_NAME: $MAUTIC_DB_NAME
      MAUTIC_RUN_CRON_JOBS: $MAUTIC_RUN_CRON_JOBS
    restart: $MAUTIC_RESTART_POLICY
  metabase:
    image: metabase/metabase:$METABASE_VERSION
    ports:
      - 3001:3000
    environment: 
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase:/metabase-data
    restart: $METABASE_RESTART_POLICY
  mongo:
    image: mongo:$MONGO_VERSION
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - mongo:/data/db
    restart: $MONGO_RESTART_POLICY
  mysql:
    image: mysql:$MYSQL_VERSION
    command: |
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --sql-mode=""
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    restart: $MYSQL_RESTART_POLICY
  nextcloud:
    image: nextcloud:$NEXTCLOUD_VERSION
    ports:
      - 8083:80
    volumes:
      - nextcloud:/var/www/html
    restart: $NEXTCLOUD_RESTART_POLICY
  nginx:
    image: nginx:$NGINX_VERSION
    ports:
      - 8081:80
      # - 443:433
    volumes:
      - ./config/nginx/sites-available:/etc/nginx/sites-available
      # - ./config/nginx/letsencrypt:/etc/letsencrypt
    restart: $NGINX_RESTART_POLICY
  pgadmin:
    image: dpage/pgadmin4:$PGADMIN_VERSION
    container_name: $PGADMIN_CONTAINER_NAME
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
    ports:
      - 16543:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.$TRAEFIK_BASE_HOST`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.tls.certresolver=letsencrypt
    restart: $PGADMIN_RESTART_POLICY
  phpmyadmin:
    image: phpmyadmin:$PHPMYADMIN_VERSION
    environment:
      PMA_ARBITRARY: 1
    ports:
      - 8087:80
    restart: $PHPMYADMIN_RESTART_POLICY
  portainer:
    image: portainer/portainer-ce:$PORTAINER_VERSION
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    restart: $PORTAINER_RESTART_POLICY
  postgres:
    image: bitnami/postgresql:$POSTGRESQL_VERSION
    container_name: $POSTGRESQL_CONTAINER_NAME
    environment:
      POSTGRESQL_USER: $POSTGRESQL_USER
      POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
      POSTGRESQL_DB: $POSTGRESQL_DB
      POSTGRESQL_ENABLE_TLS: $POSTGRESQL_ENABLE_TLS
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgres/:/home/shared
      - postgres:/var/lib/postgresql/data
    restart: $POSTGRESQL_RESTART_POLICY
  prometheus:
    image: prom/prometheus:$PROMETHEUS_VERSION
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: $PROMETHEUS_RESTART_POLICY
  promtail:
    image: grafana/promtail:$PROMTAIL_VERSION
    ports:
      - 9080:9080
    volumes:
      - ./config/promtail/config.yaml:/etc/promtail/config.yaml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yaml
    restart: $PROMTAIL_RESTART_POLICY
  rabbitmq:
    image: rabbitmq:$RABBITMQ_VERSION
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: $RABBITMQ_RESTART_POLICY
  redis:
    image: redis:$REDIS_VERSION
    ports:
      - 6379:6379
    restart: $REDIS_RESTART_POLICY
  redisinsight:
    image: redislabs/redisinsight:$REDISINSIGHT_VERSION
    container_name: $REDISINSIGHT_CONTAINER_NAME
    ports:
      - 8001:8001
    volumes:
      - redisinsight:/db
    labels:
      - traefik.enable=true
      - traefik.http.routers.redisinsight.rule=Host(`redisinsight.$TRAEFIK_BASE_HOST`)
      - traefik.http.routers.redisinsight.tls=true
      - traefik.http.routers.redisinsight.tls.certresolver=letsencrypt
    restart: $REDISINSIGHT_RESTART_POLICY
  rethinkdb:
    image: rethinkdb:$RETHINKDB_VERSION
    ports:
      - 28015:28015
      - 28016:8080
    volumes:
      - rethinkdb:/data
    restart: $RETHINKDB_RESTART_POLICY
  sonarqube:
    image: sonarqube:$SONARQUBE_VERSION
    ports:
      - 9001:9000
    restart: $SONARQUBE_RESTART_POLICY
  sonic:
    image: valeriansaliou/sonic:$SONIC_VERSION
    ports:
      - 1491:1491
    volumes:
      - ./volumes/sonic/sonic.cfg:/etc/sonic.cfg
      - ./volumes/sonic/store/:/var/lib/sonic/store/
    restart: $SONIC_RESTART_POLICY
  sqlserver:
    image: mcr.microsoft.com/mssql/server:$SQLSERVER_VERSION
    environment:
        SA_PASSWORD: $SQLSERVER_SA_PASSWORD
        ACCEPT_EULA: Y
    ports:
      - 1433:1433
    restart: $SQLSERVER_RESTART_POLICY
  traefik:
    image: traefik:$TRAEFIK_VERSION
    container_name: $TRAEFIK_CONTAINER_NAME
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=$TRAEFIK_ACME_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/traefik/acme:/etc/traefik/acme
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.traefik-auth.basicauth.users=$TRAEFIK_DASHBOARD_USERNAME:$TRAEFIK_DASHBOARD_PASSWORD
      - traefik.http.routers.traefik.rule=Host(`$TRAEFIK_BASE_HOST`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
    restart: $TRAEFIK_RESTART_POLICY
  ubuntu:
    image: ubuntu:$UBUNTU_VERSION
    tty: true
    volumes:
      - ./volumes/ubuntu/:/home/shared
    restart: $UBUNTU_RESTART_POLICY
  verdaccio:
    image: verdaccio/verdaccio:$VERDACCIO_VERSION
    environment:
      VERDACCIO_PORT: 4873
    ports:
      - 4873:4873
    volumes:
      - verdaccio:/verdaccio/storage
    restart: $VERDACCIO_RESTART_POLICY
  vscode:
    image: lscr.io/linuxserver/openvscode-server:$VSCODE_VERSION
    container_name: $VSCODE_CONTAINER_NAME
    ports:
      - 3003:3000
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/London
    volumes:
      - ./volumes/vscode:/home/workspace:cached
      - vscode-bin:/usr/bin
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.vscode-auth.basicauth.users=$VSCODE_TRAEFIK_USERNAME:$VSCODE_TRAEFIK_PASSWORD
      - traefik.http.routers.vscode.rule=Host(`vscode.$TRAEFIK_BASE_HOST`)
      - traefik.http.routers.vscode.middlewares=vscode-auth
      - traefik.http.routers.vscode.tls=true
      - traefik.http.routers.vscode.tls.certresolver=letsencrypt
    restart: $VSCODE_RESTART_POLICY
  wordpress:
    image: wordpress:$WORDPRESS_VERSION
    ports:
      - 8081:80
    volumes:
      - wordpress:/var/www/html
    restart: $WORDPRESS_RESTART_POLICY

volumes:
  appsmith:
  gitea:
  grafana:
  metabase:
  mysql:
  mongo:
  nextcloud:
  pgadmin:
  portainer:
  postgres:
  rabbitmq:
  redisinsight:
  rethinkdb:
  verdaccio:
  vscode-bin:
  wordpress:
