services:
  appsmith:
    image: appsmith/appsmith-ce:${APPSMITH_VERSION-v1.14}
    container_name: ${APPSMITH_CONTAINER_NAME-}
    ports:
      - 8085:80
    volumes:
      - appsmith:/appsmith-stacks
    labels:
      com.centurylinklabs.watchtower.enable: 'true'
    restart: ${APPSMITH_RESTART_POLICY-no}
  archlinux:
    image: archlinux:${ARCHLINUX_VERSION-base-20221225.0.113672}
    container_name: ${ARCHLINUX_CONTAINER_NAME-}
    tty: true
    volumes:
      - ./volumes/archlinux/:/home/shared
    restart: ${ARCHLINUX_RESTART_POLICY-no}
  debian:
    image: debian:${DEBIAN_VERSION-12.2}
    container_name: ${DEBIAN_CONTAINER_NAME-}
    tty: true
    volumes:
      - ./volumes/debian/:/home/shared
    restart: ${DEBIAN_RESTART_POLICY-no}
  fedora:
    image: fedora:${FEDORA_VERSION-36}
    container_name: ${FEDORA_CONTAINER_NAME-}
    tty: true
    volumes:
      - ./volumes/fedora/:/home/shared
    restart: ${FEDORA_RESTART_POLICY-no}
  gitea:
    image: gitea/gitea:${GITEA_VERSION-1.18.0}
    container_name: ${GITEA_CONTAINER_NAME-}
    environment:
      USER_UID: 1000
      USER_GID: 1000
    volumes:
      - gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 3002:3000
    restart: ${GITEA_RESTART_POLICY-no}
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION-9.5.2}
    container_name: ${GRAFANA_CONTAINER_NAME-}
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`${GRAFANA_TRAEFIK_HOST-grafana.localhost}`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
    restart: ${GRAFANA_RESTART_POLICY-no}
  hoppscotch:
    image: hoppscotch/hoppscotch:${HOPPSCOTCH_VERSION-main}
    container_name: ${HOPPSCOTCH_CONTAINER_NAME-}
    ports:
    - 3004:3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.hoppscotch.rule=Host(`${HOPPSCOTCH_TRAEFIK_HOST-hoppscotch.localhost}`)
      - traefik.http.routers.hoppscotch.tls=true
      - traefik.http.routers.hoppscotch.tls.certresolver=letsencrypt
    restart: ${HOPPSCOTCH_RESTART_POLICY-no}
  kali:
    image: kalilinux/kali-rolling:${KALI_VERSION-latest}
    container_name: ${KALI_CONTAINER_NAME-}
    tty: true
    restart: ${KALI_RESTART_POLICY-no}
  linkstack:
    image: linkstackorg/linkstack
    container_name: ${LINKSTACK_CONTAINER_NAME-}
    environment:
      HTTP_SERVER_NAME: ${LINKSTACK_TRAEFIK_HOST-linkstack.localhost}
      HTTPS_SERVER_NAME: ${LINKSTACK_TRAEFIK_HOST-linkstack.localhost}
    ports:
      - 8082:80
    volumes:
      - linkstack:/htdocs
    labels:
      - traefik.enable=true
      - traefik.http.routers.linkstack.rule=Host(`${LINKSTACK_TRAEFIK_HOST-linkstack.localhost}`)
      - traefik.http.routers.linkstack.tls=true
      - traefik.http.routers.linkstack.tls.certresolver=letsencrypt
    restart: ${LINKSTACK_RESTART_POLICY-no}
  loki:
    image: grafana/loki:${LOKI_VERSION-2.8.3}
    container_name: ${LOKI_CONTAINER_NAME-}
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    restart: ${LOKI_RESTART_POLICY-no}
  matomo:
    image: matomo:${MATOMO_VERSION-4.14.2}
    container_name: ${MATOMO_CONTAINER_NAME-}
    ports:
      - 8086:80
    volumes:
      - matomo:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.matomo.rule=Host(`${MATOMO_TRAEFIK_HOST-matomo.localhost}`)
      - traefik.http.routers.matomo.tls=true
      - traefik.http.routers.matomo.tls.certresolver=letsencrypt
    restart: ${MATOMO_RESTART_POLICY-no}
  metabase:
    image: metabase/metabase:${METABASE_VERSION-v0.47.7}
    container_name: ${METABASE_CONTAINER_NAME-}
    ports:
      - 3001:3000
    environment: 
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase:/metabase-data
    labels:
      - traefik.enable=true
      - traefik.http.routers.metabase.rule=Host(`${METABASE_TRAEFIK_HOST-metabase.localhost}`)
      - traefik.http.routers.metabase.tls=true
      - traefik.http.routers.metabase.tls.certresolver=letsencrypt
    restart: ${METABASE_RESTART_POLICY-no}
  mongo:
    image: mongo:${MONGO_VERSION-7.0.5}
    container_name: ${MONGO_CONTAINER_NAME-}
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD-root}
    volumes:
      - mongo:/data/db
    restart: ${MONGO_RESTART_POLICY-no}
  mysql:
    image: mysql:${MYSQL_VERSION-8.1.0}
    container_name: ${MYSQL_CONTAINER_NAME-}
    command: |
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --sql-mode=""
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE-}
      MYSQL_USER: ${MYSQL_USER-gabrielrufino}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD-12345678}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD-root}
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    restart: ${MYSQL_RESTART_POLICY-no}
  nextcloud:
    image: nextcloud:${NEXTCLOUD_VERSION-27.0.1}
    container_name: ${NEXTCLOUD_CONTAINER_NAME-}
    ports:
      - 8083:80
    volumes:
      - nextcloud:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_TRAEFIK_HOST-nextcloud.localhost}`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=letsencrypt
    restart: ${NEXTCLOUD_RESTART_POLICY-no}
  nginx:
    image: nginx:${NGINX_VERSION-1.23.1}
    container_name: ${NGINX_CONTAINER_NAME-}
    ports:
      - 8081:80
      # - 443:433
    volumes:
      - ./config/nginx/sites-available:/etc/nginx/sites-available
      # - ./config/nginx/letsencrypt:/etc/letsencrypt
    restart: ${NGINX_RESTART_POLICY-no}
  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION:-8.2}
    container_name: ${PGADMIN_CONTAINER_NAME:-}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-root@gabrielrufino.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-root}
    ports:
      - 16543:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`${PGADMIN_TRAEFIK_HOST-pgadmin.localhost}`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.tls.certresolver=letsencrypt
    restart: ${PGADMIN_RESTART_POLICY:-no}
  phpmyadmin:
    image: phpmyadmin:${PHPMYADMIN_VERSION-5.2.0}
    container_name: ${PHPMYADMIN_CONTAINER_NAME-}
    environment:
      PMA_ARBITRARY: 1
    ports:
      - 8087:80
    restart: ${PHPMYADMIN_RESTART_POLICY-no}
  portainer:
    image: portainer/portainer-ce:${PORTAINER_VERSION-2.20.3}
    container_name: ${PORTAINER_CONTAINER_NAME-}
    ports:
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    restart: ${PORTAINER_RESTART_POLICY-no}
  postgres:
    image: bitnami/postgresql:${POSTGRESQL_VERSION:-15.5.0}
    container_name: ${POSTGRESQL_CONTAINER_NAME:-}
    environment:
      POSTGRESQL_USER: ${POSTGRESQL_USER:-root}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD:-root}
      POSTGRESQL_DB: ${POSTGRESQL_DB:-postres}
      POSTGRESQL_ENABLE_TLS: ${POSTGRESQL_ENABLE_TLS:-no}
      POSTGRESQL_TLS_CERT_FILE: /opt/bitnami/postgresql/certs/postgres.crt
      POSTGRESQL_TLS_KEY_FILE: /opt/bitnami/postgresql/certs/postgres.key
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgres/certs:/opt/bitnami/postgresql/certs
      - postgres:/var/lib/postgresql/data
    restart: ${POSTGRESQL_RESTART_POLICY:-no}
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION-v2.43.0}
    container_name: ${PROMETHEUS_CONTAINER_NAME-}
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: ${PROMETHEUS_RESTART_POLICY-no}
  promtail:
    image: grafana/promtail:${PROMTAIL_VERSION-2.7.5}
    container_name: ${PROMTAIL_CONTAINER_NAME-}
    ports:
      - 9080:9080
    volumes:
      - ./config/promtail/config.yaml:/etc/promtail/config.yaml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yaml
    restart: ${PROMTAIL_RESTART_POLICY-no}
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION-3.11.13-management}
    container_name: ${RABBITMQ_CONTAINER_NAME-}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER-root}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS-root}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq.rule=Host(.${RABBITMQ_TRAEFIK_HOST-rabbitmq.localhost}`)
      - traefik.http.routers.rabbitmq.service=rabbitmq
      - traefik.http.routers.rabbitmq.tls=true
      - traefik.http.routers.rabbitmq.tls.certresolver=letsencrypt
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
    restart: ${RABBITMQ_RESTART_POLICY-no}
  redis:
    image: redis:${REDIS_VERSION-7.0.5}
    container_name: ${REDIS_CONTAINER_NAME-}
    ports:
      - 6379:6379
    command: redis-server --requirepass "${REDIS_PASSWORD-}"
    restart: ${REDIS_RESTART_POLICY-no}
  redisinsight:
    image: redislabs/redisinsight:${REDISINSIGHT_VERSION-1.14.0}
    container_name: ${REDISINSIGHT_CONTAINER_NAME-}
    ports:
      - 8001:8001
    environment:
      RITRUSTEDORIGINS: ${REDISINSIGHT_RITRUSTEDORIGINS-http://localhost:8001}
    volumes:
      - redisinsight:/db
    labels:
      - traefik.enable=true
      - traefik.http.routers.redisinsight.rule=Host(`${REDISINSIGHT_TRAEFIK_HOST-redisinsight.localhost}`)
      - traefik.http.routers.redisinsight.tls=true
      - traefik.http.routers.redisinsight.tls.certresolver=letsencrypt
    restart: ${REDISINSIGHT_RESTART_POLICY-no}
  rethinkdb:
    image: rethinkdb:${RETHINKDB_VERSION-2.4.2}
    container_name: ${RETHINKDB_CONTAINER_NAME-}
    ports:
      - 28015:28015
      - 28016:8080
    volumes:
      - rethinkdb:/data
    restart: ${RETHINKDB_RESTART_POLICY-no}
  sonarqube:
    image: sonarqube:${SONARQUBE_VERSION-9.9.1-community}
    container_name: ${SONARQUBE_CONTAINER_NAME-}
    ports:
      - 9001:9000
    volumes:
      - sonarqube:/opt/sonarqube/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarqube.rule=Host(`${SONARQUBE_TRAEFIK_HOST-sonarqube.localhost}`)
      - traefik.http.routers.sonarqube.tls=true
      - traefik.http.routers.sonarqube.tls.certresolver=letsencrypt
    restart: ${SONARQUBE_RESTART_POLICY-no}
  sonic:
    image: valeriansaliou/sonic:${SONIC_VERSION-v1.4.0}
    container_name: ${SONIC_CONTAINER_NAME-}
    ports:
      - 1491:1491
    volumes:
      - ./volumes/sonic/sonic.cfg:/etc/sonic.cfg
      - ./volumes/sonic/store/:/var/lib/sonic/store/
    restart: ${SONIC_RESTART_POLICY-no}
  sqlserver:
    image: mcr.microsoft.com/mssql/server:${SQLSERVER_VERSION-2019-latest}
    container_name: ${SQLSERVER_CONTAINER_NAME-}
    environment:
        SA_PASSWORD: ${SQLSERVER_SA_PASSWORD-password@123}
        ACCEPT_EULA: Y
    ports:
      - 1433:1433
    restart: ${SQLSERVER_RESTART_POLICY-no}
  traefik:
    image: traefik:${TRAEFIK_VERSION-v2.10.5}
    container_name: ${TRAEFIK_CONTAINER_NAME-}
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL-}
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/traefik/acme:/etc/traefik/acme
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_USERNAME-}:${TRAEFIK_DASHBOARD_PASSWORD-}
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DASHBOARD_HOST-traefik.localhost}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
    restart: ${TRAEFIK_RESTART_POLICY-no}
  ubuntu:
    image: ubuntu:${UBUNTU_VERSION-23.10}
    container_name: ${UBUNTU_CONTAINER_NAME-}
    tty: true
    volumes:
      - ./volumes/ubuntu/:/home/shared
    restart: ${UBUNTU_RESTART_POLICY-no}
  verdaccio:
    image: verdaccio/verdaccio:${VERDACCIO_VERSION-5.26}
    container_name: ${VERDACCIO_CONTAINER_NAME-}
    environment:
      VERDACCIO_PORT: 4873
    ports:
      - 4873:4873
    volumes:
      - verdaccio:/verdaccio/storage
    restart: ${VERDACCIO_RESTART_POLICY-no}
  vscode:
    image: lscr.io/linuxserver/openvscode-server:${VSCODE_VERSION:-1.85.1}
    container_name: ${VSCODE_CONTAINER_NAME:-}
    ports:
      - 3003:3000
    environment:
      PUID: 1000
      PGID: 1000
      TZ: ${VSCODE_TIMEZONE-America/Sao_Paulo}
      CONNECTION_TOKEN: ${VSCODE_CONNECTION_TOKEN-root}
      SUDO_PASSWORD: ${VSCODE_SUDO_PASSWORD-root}
    volumes:
      - ${VSCODE_BASE_FOLDER:-./volumes/vscode}:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.vscode.rule=Host(`${VSCODE_TRAEFIK_HOST-vscode.localhost}`)
      - traefik.http.routers.vscode.tls=true
      - traefik.http.routers.vscode.tls.certresolver=letsencrypt
    restart: ${VSCODE_RESTART_POLICY:-no}
  windows:
    image: dockurr/windows
    container_name: ${WINDOWS_CONTAINER_NAME-}
    environment:
      VERSION: ${WINDOWS_VERSION-win11}
    devices:
      - /dev/kvm
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 3389:3389/tcp
      - 3389:3389/udp
    stop_grace_period: 2m
    restart: ${WINDOWS_RESTART_POLICY-no}
  wordpress:
    image: wordpress:${WORDPRESS_VERSION-latest}
    container_name: ${WORDPRESS_CONTAINER_NAME-}
    ports:
      - 8081:80
    volumes:
      - wordpress:/var/www/html
    restart: ${WORDPRESS_RESTART_POLICY-no}

volumes:
  appsmith:
  gitea:
  grafana:
  linkstack:
  matomo:
  metabase:
  mysql:
  mongo:
  nextcloud:
  pgadmin:
  portainer:
  postgres:
  rabbitmq:
  redisinsight:
  rethinkdb:
  sonarqube:
  verdaccio:
  wordpress:
